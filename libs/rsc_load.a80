        DEFINE KtBin 0  ; incbin data into memory, no label is assigned
        DEFINE KtAsm 1  ; include assembly file
        DEFINE KtNon 2  ; no include, just data record is created (e.g. for executable resources init, run, draw...)
        DEFINE KtDat 3  ; incbin with label assignment. Label is in position of RUN field

rscnt:  =      0
_dadd:  =      $
_dpag:  =      #0

        MACRO  rload kname, _rtype, dpg, dst, run, _rfile
        PAGE   _dpag
        ORG    _dadd
        db     _rpg, dpg
_dend:  =      $

        PAGE    _rpg and 7
        ORG    _radd

        IF _rtype=KtBin
           incbin _rfile
        ENDIF

        IF _rtype=KtDat
run        incbin _rfile
        ENDIF

        IF _rtype=KtAsm
           INCLUDE _rfile
        ENDIF

        IF _rtype=KtNon
           ; nothing to include, just pupulate table
        ENDIF
_rend:  =      $

        PAGE   _dpag
        ORG    _dend
        IF _rtype=KtDat
           dw     _radd, _rend-_radd, dst, 0
        ELSE
           dw     _radd, _rend-_radd, dst, run
        ENDIF
_dend:  =      $

        ;DISPLAY "Rsc:",rscnt," Start: ",_radd," Len:",_rend-_radd," Pg:",_rpg, " End:",_rend
        IF _rend>0x10000
           ; shut down the compiler if data exceeds memory limit
           LUA
              sj.exit(0)
           ENDLUA
        ENDIF
;        display "#:",rscnt
kname   =      rscnt
rscnt   =      rscnt+1
_radd   =      _rend
_dadd   =      _dend
        ENDM

        MACRO rinclude file
         PAGE _rpg and 7
         ORG  _radd
         INCLUDE file
_rend:   = $
_radd:   = $
         PAGE _dpag
         ORG  _dend
        ENDM

;----- resource table
res_tab:             ; name of the resource table
_rpg:   = o3          ; ram page to use
_radd:  = #c000      ; start address in the page
;_rend:  = _radd      ; init value (not required)

;        sytax:
;        rload kname, _rtype, dpg, dst, run, _rfile

         rload  KRscLaunchpad1 , KtBin, o0+8, #4000, 0, "demo/data/cats/launchpad_beacon.scr.zx7"
         rload  KRscEarth1     , KtBin, o0+8, #4000, 0, "demo/data/cats/earth_2.scr.zx7"
         rload  KRscTitles     , KtBin, o0, temp3k,0, "bin/end_titles.bin"                   ;compile 2 times to update addresses of routine calls!!!
tmouse:  = temp3k
tplanet: = tmouse + 350
         rload  KRscPlanet     , KtBin, o0, tplanet,0, "demo/data/cats/cheese_planet_4.hdi.zx7"
         rload  KRscMouse      , KtBin, o0, tmouse ,0, "demo/data/cats/lv137.hdi.zx7"
         rload  KRscBlueprint  , KtBin, o0+8,  #4000,0, "demo/data/cats/kocka_blueprint.scr.zx7"
         rload  KRscKittens    , KtBin, o0, temp3k,0, "demo/data/titles2/kitten.hdi.out.zx7"
         rload  KRscInvaders   , KtBin, o0, temp3k,0, "demo/data/titles2/invaders_2.hdi.zx7"
         rload  KRscSinDiKat   , KtBin, o0, temp3k,0, "demo/data/titles2/sindikat.hdi.out.zx7"
         rload  KRscEnginy     , KtBin, o0, temp3k,0, "demo/data/titles2/engines3.hdi.out.zx7"
         rload  KRscCat        , KtBin, o0, temp3k,0, "demo/data/titles2/cat.hdi.zx7"
         rload  KRscEnding     , KtBin, o0+8, #4000,0, "demo/data/cats/crashcatship_nocat.zx7"
;         rload  KRscEnding     , KtBin, o0+8, #4000,0, "demo/data/cats/crashcatship.zx7"
         rload  KRscAstrocat   , KtBin, o0+8, temp3k,0, "demo/data/cats/cat_astronaut.hdi.zx7"
ttruck: = temp3k+1100
         rload  KRscTruck      , KtBin, o0+8, ttruck,0, "demo/data/cats/truck.hdi"

         DISPLAY "Resource page:",_rpg and 7," Free:",0x10000-_rend

;        page 4 is occupied by rotoid engine. Resources can be used prior rotoid execution!
_rpg:   = o4
_radd:  = #c000
_rend:  = _radd

; multab is special case using new unpacktmp - decompress from temp buffer. Destination address is in "run" field
         IFDEF _multabXls
           rload   KRscMultab     ,KtBin ,o6 ,temp3k ,#c000 ,"demo/rotoid/multab_round_rev.zx7"
         ENDIF
         IFDEF _multabBmp
           rload   KRscMultab     ,KtBin ,o6 ,temp3k ,#c000 ,"demo/rotoid/multab_bitmap.zx7"
         ENDIF
         DISPLAY "Resource page:",_rpg and 7," Free:",0x10000-_rend

;        page 1 is occupied by rotoid engine. Resources can be used prior rotoid execution!
_rpg:   = o6
_radd:  = #c000
_rend:  = _radd
         DISPLAY "Resource page:",_rpg and 7," Free:",0x10000-_rend

_rpg:   = o1
_radd:  = #c000
_rend:  = _radd
; include assembly file, start address within the included file
; -- fzx font driver
         rload  KRscFzxIni, KtAsm, _rpg, 0, fzx.init, "libs/fzx_drv_mod.a80"
         rload  KRscFzxRun, KtNon, _rpg, 0, fzx.runc, ""                             ; create only record in the table (does not include any data), can be called as executable resource
         rload  KRscFzxAnd, KtNon, _rpg, 0, fzx.andoperand, ""
         rload  KRscFzxOr , KtNon, _rpg, 0, fzx.oroperand, ""
         rload  KRscFzxFnt4, KtDat, _rpg, 0, ffnt4 , "fonts/Programmer_osg.fzx"
         rload  KRscFzxFnt5, KtDat, _rpg, 0, ffnt5 , "fonts/DigitalDisco.fzx"
; include some texts
         PAGE _rpg and 7
         ORG  _radd
         INCLUDE "demo/demo_txt.a80"
_rend:   = $
_radd:   = $
         PAGE _dpag
         ORG  _dend
         DISPLAY "Resource page:",_rpg and 7," Free:",0x10000-_rend

_rpg:   = o7
_radd:  = #db00
_rend:  = _radd

         PAGE _rpg and 7
         ORG  _radd

         include "demo/msx/pt3extra.a80"
_rend:   = $
_radd:   = $
         PAGE _dpag
         ORG  _dend

msx.ini:  = music_init
msx.run:  = music_play

;msx.ini:  = dummy
;msx.run:  = dummy

         PAGE _dpag
         ORG  _dend

         DISPLAY "Resource page:",_rpg and 7," Free:", 0x10000-_rend
         PAGE _dpag
         ORG  _dend

_rpg:   = o0
_radd:  = p0free
_rend:  = _radd

         DISPLAY "Resource page:",_rpg and 7," Free:", 0x10000-_rend

         PAGE _dpag
         ORG  _dend

;-------
;         rload  KRscHdfFnt2, KtDat, o6, 0, hdffnt1 , "fontsql/plain1.hdf"
;         rload  KRscHdfFnt1, KtDat, o6, 0, hdffnt2 , "fontsql/nsanserif16_first.hdf"
;         rload  KRscHdfFnt1, KtDat, o6, 0, hdffnt2 , "fontsql/small3_first.hdf"

;         rload   KRscHybrid     ,KtBin ,o0 ,temp3k ,0 ,"demo/gfx/hdi/hybrid.hdi.zx7"
;         rload   KRscJupiter    ,KtBin ,o0 ,temp3k ,0 ,"demo/gfx/hdi/jupiter.hdi.zx7"
;         rload   KRscJupiter_Bw ,KtBin ,o0 ,temp3k ,0 ,"demo/gfx/hdi/jupiter_bw.hdi.zx7"
;         rload   KRscOddysey_1  ,KtBin ,o0 ,temp3k ,0 ,"demo/gfx/hdi/oddysey_1.hdi.zx7"
;         rload   KRscStation1   ,KtBin ,o0 ,temp3k ,0 ,"demo/gfx/hdi/station1.hdi.zx7"
;         rload   KRscEye        ,KtBin ,o0 ,temp3k ,0 ,"demo/gfx/hdi/Eye.hdi.zx7"
;         rload   KRscPluto      ,KtBin ,o0 ,temp3k ,0 ,"demo/gfx/hdi/pluto.hdi.zx7"

;         rload   KRscRedplanet  ,KtBin ,o0 ,temp3k ,0 ,"demo/gfx/hdi/redplanet.hdi.zx7"
;         rload   KRscPlanetLP   ,KtBin, o0, temp3k , 0, "demo/gfx/hdi/planet_pink_flip.hdi.zx7"

;         rload   KRscTrainBack  ,KtBin, o0, _tr_back  , 0 ,"demo/gfx/hdi/city_back.hdi.zx7"
;         rload   KRscCompzoom   ,KtBin, o0, #4000     , 0 ,"demo/gfx/screens/computer_zoom.bin.zx7"
;         display "**** ",lback," ",temp3k.end

;         rload  KRscFzxFnt1, KtDat, _rpg, 0, ffnt1   , "fonts/belegost3.fzx"
;         rload  KRscFzxFnt2, KtDat, _rpg, 0, ffnt2   , "fonts/Aribeth6.fzx"
;         rload  KRscChrFnt1, KtDat, _rpg, 0, scroll_font, "fonts/AlmostCharcoalWider.fnt"

;         rload  KRscFzxFnt4, KtDat, _rpg, 0, ffnt4   , "fonts/consul1.fzx"
;         rload  KRscFzxFnt4, KtDat, _rpg, 0, ffnt4   , "fonts/up&up.fzx"

;         rload  KRscFzxFnt4, KtDat, _rpg, 0, ffnt4   , "fonts/Soxz.fzx"
;         rload  KRscFzxFnt4, KtDat, _rpg, 0, ffnt4   , "fonts/ste-aff.fzx"
;         rload  KRscFzxFnt4, KtDat, _rpg, 0, ffnt4   , "fonts/Twombly.fzx"
;         rload  KRscFzxFnt4, KtDat, _rpg, 0, ffnt4   , "fonts/Programmer.fzx"
;         rload  KRscFzxFnt4, KtDat, _rpg, 0, ffnt4   , "fonts/Swiss.fzx"

;         rload  KRscHdfFnt2, KtDat, o6, 0, hdffnt1 , "fontsql/excellent_first.hdf"
;         rload  KRscHdfFnt3, KtDat, o6, 0, hdffnt3 , "fontsql/small3_first.hdf"

;         rload  KRscGramon,  KtBin, o0, #4000, #4000, "_tools/gramon.bin.zx7"

;         rinclude "libs/egl_scroll.a80"
;        display "****", _apl1, _apl2
;         rload  KRscNostSide, KtBin, o0, temp3k,0, "demo/gfx/hdi/nostromo_side.hdi.zx7"        ; unused
;         rinclude "libs/egl_scroll.a80"
;         rload   KRscExplore    ,KtBin, o0, temp3k,     0 ,"demo/gfx/hdi/prometheus_explorer_zx_algn.hdi.zx7"

; load binary file, it is not executable and no label defined
/*
         IFDEF _multabXls
           rload   KRscMultab     ,KtBin ,o1 ,temp3k ,#c000 ,"demo/rotoid/multab_round_rev.zx7"
         ENDIF
         IFDEF _multabBmp
           rload   KRscMultab     ,KtBin ,o1 ,temp3k ,#c000 ,"demo/rotoid/multab_bitmap.zx7"
         ENDIF
*/
; multab is special case using new unpacktmp - decompress from temp buffer. Destination address is in "run" field

;         rload   KRscVVoid     ,KtBin ,o0 ,temp3k      , 0, "demo/gfx/hdi/void/void_vertical_pos.hdi.zx7"
;         rload   KRscPlanet    ,KtBin ,o0 ,temp3k      , 0, "demo/gfx/hdi/planet.hdi.zx7"
